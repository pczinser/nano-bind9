# This workflow will build a NanoVMs unikernel package and publish it to repo.ops.city

name: nanovms-bind

# Controls when the workflow will run
on: workflow_dispatch # manual trigger for now

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install dependencies
        run: sudo apt install -y pkg-config libtool autoconf libuv1-dev libnghttp2-dev libssl-dev make

      - name: Clone stable BIND9
        run: git clone --branch v9_18 https://gitlab.isc.org/isc-projects/bind9.git
        
      - name: autoconf 
        run: cd $GITHUB_WORKSPACE/bind9 && autoreconf -fi
        
        # No linux capabilities on nanos
      - name: configure
        run: cd $GITHUB_WORKSPACE/bind9 && ./configure --disable-linux-caps

      - name: make
        run: cd $GITHUB_WORKSPACE/bind9 && make
        
      - name: move compiled libraries
        run: sudo find $GITHUB_WORKSPACE/bind9/ -name *.so -type f -exec cp -L {} /usr/lib/x86_64-linux-gnu/ \;
                        
      - name: move linux so to NanoVM package
        run: cp -L /lib64/ld-linux-x86-64.so.2 $GITHUB_WORKSPACE/sysroot/lib64/ld-linux-x86-64.so.2 && ls $GITHUB_WORKSPACE/sysroot/lib64/ld-linux-x86-64.so.2
        
      - name: create dependency list
        run: ldd $GITHUB_WORKSPACE/bind9/bin/named/.libs/named | grep -v vdso | grep -v ld-linux-x86-64.so | sed 's/^[[:space:]]*//g' | cut -d ' ' -f 3 > $GITHUB_WORKSPACE/deps.txt
        
      - name: put dependicies in NanoVM package
        run: while read i; do  cp -Lr $i $GITHUB_WORKSPACE/sysroot$i;done < $GITHUB_WORKSPACE/deps.txt
        
      - name: put binary in NanoVM package
        run: cp -L $GITHUB_WORKSPACE/bind9/bin/named/.libs/named $GITHUB_WORKSPACE/
        
      - name: clean git artifacts from NanoVM package
        run: find $GITHUB_WORKSPACE/sysroot -name .keep -exec rm -f {} \;
        
      - name: tar up NanoVM package
        run: tar zvcf named_9.18.6.tar.gz package.manifest README.md named sysroot/
        
      - name: install ops
        run: curl https://ops.city/get.sh -sSfL | sh
      
      - name: Add NanoVM package to local OPS repo
        run: $HOME/.ops/bin/ops pkg add --name named_9.18.6 $GITHUB_WORKSPACE/named_9.18.6.tar.gz
        
      - name: test local NanoVM package
        run: $HOME/.ops/bin/ops pkg contents --local /named_9.18.6
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: package
          # A file, directory or wildcard pattern that describes what to upload
          path: named_9.18.6.tar.gz
          # The desired behavior if no files are found using the provided path.
          retention-days: 1
              
      #- name: login to ops
      #  run: $HOME/.ops/bin/ops pkg login ${{ secrets.OPS_REPO_KEY }} && $HOME/.ops/bin/ops pkg push named_9.18.6
